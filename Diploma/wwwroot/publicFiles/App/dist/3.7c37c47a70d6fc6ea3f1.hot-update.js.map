{"version":3,"file":"3.7c37c47a70d6fc6ea3f1.hot-update.js","sources":["webpack:///src/components/siteEditorComponents/newPage.js?2bee"],"sourcesContent":["import React, { Component, PropTypes } from 'react'\r\nimport Dropdown from 'react-dropdown'\r\n\r\nexport default class NewPageForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitialState();\r\n        let self = this;\r\n        fetch('/api/templates',\r\n            {\r\n                method: 'GET',\r\n                credentials: \"same-origin\",\r\n                headers: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n            })\r\n            .then(response => response.json())\r\n            .then(templates => {\r\n                self.setState((prevstate) => {\r\n                    prevstate.availableTemps = templates;\r\n                    return prevstate;\r\n                });\r\n            });\r\n    }\r\n\r\n    getInitialState() {\r\n        return {\r\n            pageName: '',\r\n            tempName: '',\r\n            availableTemps: []\r\n        };\r\n    }\r\n\r\n    templateNameChange(event) {\r\n        this.setState((prevstate) => {\r\n            prevstate.tempName = event.value;\r\n            return prevstate;\r\n        });\r\n    }\r\n\r\n    pageNameChange(event) {\r\n        let pagename = event.target.value;\r\n        this.setState((prevstate) => {\r\n            prevstate.pageName = pagename;\r\n            return prevstate;\r\n        });\r\n    }\r\n\r\n    createNewPage() {\r\n        fetch('/api/sites/' + localStorage.getItem(\"siteName\") + '/' + this.state.pageName,\r\n            {\r\n                method: 'POST',\r\n                credentials: \"same-origin\",\r\n                headers: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n            })\r\n        .then(result => result.text())\r\n        .then(pageName => {\r\n            localStorage.setItem(\"pageName\", this.state.pageName);\r\n            localStorage.setItem(\"templateName\", this.state.tempName);\r\n            window.location.replace('pageEditor.html');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const options = this.state.availableTemps;\r\n        let choosenTemplate = this.state.tempName;\r\n        return <div>\r\n            <Dropdown options={options} onChange={this.templateNameChange.bind(this)}\r\n            value={choosenTemplate}\r\n            placeholder=\"Выберите шаблон\" />\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Имя страницы\"\r\n            aria-describedby=\"basic-addon1\" onChange={this.pageNameChange.bind(this)}/>\r\n\r\n            <button type=\"button\" className=\"btn btn-default navbar-btn\" \r\n            onClick={this.createNewPage.bind(this, event)}>Создать</button>\r\n            \r\n        </div>\r\n        }\r\n}\n\n\n// WEBPACK FOOTER //\n// src/components/siteEditorComponents/newPage.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AARA;AAYA;;;;;AA9EA;;;;A","sourceRoot":""}