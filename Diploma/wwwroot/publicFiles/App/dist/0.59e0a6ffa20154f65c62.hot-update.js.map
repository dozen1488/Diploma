{"version":3,"file":"0.59e0a6ffa20154f65c62.hot-update.js","sources":["webpack:///src/components/pageEditor.js?27d2"],"sourcesContent":["import React, { Component, PropTypes } from 'react'\r\nimport { DragDropContext, DragSource } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nconst Types = {\r\n  CARD: 'card'\r\n};\r\n\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    // Return the data describing the dragged item\r\n    const item = { id: props.id };\r\n    return item;\r\n  },\r\n\r\n  endDrag(props, monitor, component) {\r\n    if (!monitor.didDrop()) {\r\n      return;\r\n    }\r\n\r\n    // When dropped on a compatible target, do something\r\n    const item = monitor.getItem();\r\n    const dropResult = monitor.getDropResult();\r\n    CardActions.moveCardToList(item.id, dropResult.listId);\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    // Call this function inside render()\r\n    // to let React DnD handle the drag events:\r\n    connectDragSource: connect.dragSource(),\r\n    // You can ask the monitor about the current drag state:\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nclass PageEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        }}>\r\n        {DragSource('knight', knightSource, collect)(Knight)}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default PageEditor;\n\n\n// WEBPACK FOOTER //\n// src/components/pageEditor.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;;AACA;AAAA;AAAA;AAEA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AAQA;;;;;AAGA;;;;A","sourceRoot":""}